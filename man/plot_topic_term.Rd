% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/text_mining_functions.R
\name{plot_topic_term}
\alias{plot_topic_term}
\title{Visualize a plot for highest word probabilities within each topic}
\usage{
plot_topic_term(beta_td, top_n, topic_names = NULL, ...)
}
\arguments{
\item{beta_td}{A tidy data frame that includes term (word)-topic probabilities
(probabilities of each word per each topic).}

\item{top_n}{A number of top n terms frequently observed in each document.}

\item{topic_names}{(Labeled) topic names}

\item{...}{Further arguments passed to \code{group_by}.}
}
\description{
Visualize a plot for highest word probabilities within each topic.
}
\examples{
\dontrun{
library(stm)
library(tidytext)

# Apply structural topic model
# Convert quanteda objects to the stm package format
memory.limit(24000)
out <- convert(dfm, to = "stm")

K_search <- searchK(out$documents,
                    out$vocab, K = c(5:10),
                    data = out$meta,
                    prevalence = ~ reference_type + s(year),
                    verbose = TRUE)

# Run model with 15 topics
stm_15 <- stm(out$documents,
              out$vocab,
              data = out$meta,
              prevalence =  ~ reference_type + s(year),
              max.em.its = 75,
              init.type = 'Spectral',
              K = 15,
              verbose = FALSE)

# Tidy the word-topic combinations
beta_td <- tidy(stm_15, document_names = rownames(dfm))

beta_td \%>\% plot_topic_term(top_n = 10)
}

}
